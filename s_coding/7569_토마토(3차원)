#if 0
//토마토
//https://www.acmicpc.net/problem/7569

#include <iostream>
#include <algorithm>
#include <queue>
using namespace std;
int M, N, H; //가로 , 세로, 높이
int map[100 + 10][100 + 10][100 + 10];
int visited[100 + 10][100 + 10][100 + 10];
int daymax;
int cnt;
int dh[] = { 0,0,0,0,-1,1 };// 상하좌우 위,아래
int dr[] = { -1,1,0,0,0,0 };
int dc[] = { 0,0,-1,1,0,0 };
struct tomato {
	int h;
	int r;
	int c;
	int d;
};
queue <tomato> q;

int BFS() {

	
	for (int i = 1; i <= H; i++) {
		for (int j = 1; j <= N; j++) {
			for (int k = 1; k <= M; k++) {
				if (map[i][j][k] == 1 ) {

					q.push({ i, j, k ,0});
				}
				else if (map[i][j][k] == 0) {
					
					map[i][j][k] = 2; //확산가능
					cnt++;
				}
			}
		}

	}
	if (cnt == 0)return 0;

	while (!q.empty()) {

		tomato cur = q.front();
	
		q.pop();

		for (int i = 0; i < 6; i++) {

			
			int nh = cur.h + dh[i];
			int nr = cur.r + dr[i];
			int nc = cur.c + dc[i];

			if (map[nh][nr][nc] != 2 )continue;

			map[nh][nr][nc] = 1; //확산 완료
			q.push({ nh,nr,nc, cur.d + 1 });

			
			if (--cnt == 0)return cur.d + 1;
		
		}
	

	}
	
	//cnt가 남아있을 경우 
	return -1;
	
}
void InputData() {
	cin >> M >> N >> H;

	for (int i = 1; i <= H; i++) {
		for (int j = 1; j <= N; j++) {
			for (int k = 1; k <= M; k++) {
				cin >> map[i][j][k];
			}
		}

	}
}
int main() {
	freopen("input.txt", "r", stdin);
	InputData();

	cout << BFS();
	return 0;
}

#endif
