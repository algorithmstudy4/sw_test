#include <iostream>
#include <queue>

using namespace std;

int graph[1001][1001];
int visit[1001] = {0};
int n, m, v;

void DFS(int x)
{
	visit[x] = 1;
	cout << x << " ";
	
	for(int i = 1; i <= n; i++) {
		if(visit[i] == 0 && graph[x][i] == 1) {
			DFS(i);
		}
	}
}
void BFS(int x)
{
	queue<int> q;
	q.push(x);
	visit[x] = 0;
	while(!q.empty()) {
		x = q.front();
		cout << q.front() << " ";
		q.pop();
		
			
		for(int i = 1; i <= n; i++) {
			if(visit[i] == 1 && graph[x][i] == 1) {
				q.push(i);
				visit[i] = 0;
			}
		}
	}
}
int main()
{
	cin >> n >> m >> v;
	
	int x, y;
	for(int i = 0; i < m; i++) {
		cin >> x >> y;
		graph[x][y] = 1;
		graph[y][x] = 1;
	}
	DFS(v);
	cout << endl;
	BFS(v);
}
