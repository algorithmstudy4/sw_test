#include <iostream>
#include <vector>

using namespace std;

int n, m; 
vector<vector<int> > graph;
int visited[1000] = {0};
int cnt = 0;

void DFS(int node)
{
	cnt++;
	visited[node] = 1;
	
    for (int i = 0; i < graph[node].size(); i++) {  
	  	int next = graph[node][i];
		if (!visited[next]) {
			DFS(next);
		}
	}
}
int main()
{
	cin >> n;
	cin >> m;
	
	graph.resize(n + 1);
	
	int a, b;
	for(int i = 0; i < m; i++) {
		cin >> a >> b;
		graph[a].push_back(b);
		graph[b].push_back(a);
	}
	
	DFS(1);
	
	cout << cnt - 1 << endl;
}
