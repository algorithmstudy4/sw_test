#include <iostream>
#define MAX 21

using namespace std;

int r, c;
char map[MAX][MAX];
bool alpha[26];
int ans = 1;
int dx[4] = {1, -1, 0, 0};
int dy[4] = {0, 0, 1, -1};

int max(int a, int b) 
{
	if(a > b) return a;
	else return b;
}
void DFS(int x, int y, int cnt)
{
	ans = max(ans, cnt);
 	alpha[map[x][y] - 'A'] = true;
	
	for(int i = 0; i < 4; i++) {
		int nx = x + dx[i];
		int ny = y + dy[i];
		
		if(nx < 0 || nx >= r || ny < 0 || ny >= c) {
			continue;
		}
		
		if(!alpha[map[nx][ny] - 'A']) {
			DFS(nx, ny, cnt + 1);
			alpha[map[nx][ny] - 'A'] = false;
		}
	}
}
int main()
{
	cin >> r >> c;
	
	for(int i = 0; i < r; i++) {
		cin >> map[i];
	}
	
	for(int i = 0; i < 26; i++) {
		alpha[i] = false;
	}
	
	DFS(0, 0, 1);
	
	cout << ans;
}
