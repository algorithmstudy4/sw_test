#include <iostream>
#include <string.h>

using namespace std;

int graph[50][50] = {0};
int visited[50][50] = {0};
int m, n;
int dy[4] = {1, -1, 0, 0};
int dx[4] = {0, 0, 1, -1};

void DFS(int y, int x) 
{	
	for(int i=0;i<4;i++){
        int ny=y+dy[i];
        int nx=x+dx[i];
        
        if(ny<0 || ny>=n || nx<0 || nx>=m)
            continue;
        
        if(graph[ny][nx] && !visited[ny][nx]){
        	visited[ny][nx]++;
            DFS(ny,nx);
        }
    }
}
int main()
{
	int tc;
	cin >> tc;
	
	int k;
	int x, y;
	
	for(int t = 0; t < tc; t++) {
		cin >> m >> n >> k;
		
		memset(graph,0,sizeof(graph));
        memset(visited,0,sizeof(visited));
        
		for(int i = 0; i < k; i++) {
			cin >> x >> y;
			graph[y][x] = 1;
		}
		
		int cnt = 0;
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < m; j++) {
				if(!visited[i][j] && graph[i][j]) {
					cnt++;
					visited[i][j]++;
					DFS(i, j);
				}
			}
		}
		
		cout << cnt << endl;
	}
}
