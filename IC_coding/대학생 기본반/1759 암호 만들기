#include <iostream>
#include <algorithm> 
#include <vector>
#define MAX 26

using namespace std;

char alpha[26];
char vowel[5] = {'a', 'e', 'i', 'o', 'u'};
int l, c;

void print(char arr[])
{
	for(int i = 0; i < l; i++) {
		cout << arr[i];
	}
	cout << endl;
}
void sort(char arr[])
{
	char temp;
	for(int i = 0; i < c; i++) {		
		for(int j = i + 1; j < c; j++) {
			if(arr[i]>arr[j]) {
				temp = arr[i];
				arr[i] = arr[j];
				arr[j] = temp;
			}
		}
	}
}
int check(char arr[])
{
	int j = 0;
	for(int i = 0; i < l; i++) {
		if(arr[i] == vowel[j]) {
			return 1;
		}
		j++;
	}
	return 0;
}
void solution(char items[], char bucket[], int k)
{
	if(k == 0) {
		if(!check(bucket)) { return; }
		print(bucket);
		return;
	}
	
	int lastIndex = sizeof(bucket)/sizeof(bucket[0]) - k - 1;
	
	for(int i = 0; i < sizeof(items)/sizeof(items[0]); i++) {
		if(sizeof(bucket)/sizeof(bucket[0]) == k) {
			//cout << "first : " << bucket[0] << " " << items[i] << endl;
			bucket[0] = items[i];
			solution(items, bucket, k - 1);
		}
		else if(bucket[lastIndex] < items[i]) {
			//cout << "second : " << bucket[lastIndex + 1] << " " << items[i] << endl;
			bucket[lastIndex + 1] = items[i];
			solution(items, bucket, k - 1);
		}
	}
}
int main()
{
	cin >> l >> c;
	char test[l];
	
	for(int i = 0; i < c; i++) {
		cin >> alpha[i];
	}
	
	sort(alpha);
	solution(alpha, test, l);
}
